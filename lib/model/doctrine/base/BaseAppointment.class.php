<?php

/**
 * BaseAppointment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property timestamp $start
 * @property timestamp $end
 * @property string $title
 * @property string $info
 * @property integer $dog_id
 * @property integer $user_id
 * @property Dog $Dog
 * @property User $User
 * 
 * @method integer     getId()      Returns the current record's "id" value
 * @method timestamp   getStart()   Returns the current record's "start" value
 * @method timestamp   getEnd()     Returns the current record's "end" value
 * @method string      getTitle()   Returns the current record's "title" value
 * @method string      getInfo()    Returns the current record's "info" value
 * @method integer     getDogId()   Returns the current record's "dog_id" value
 * @method integer     getUserId()  Returns the current record's "user_id" value
 * @method Dog         getDog()     Returns the current record's "Dog" value
 * @method User        getUser()    Returns the current record's "User" value
 * @method Appointment setId()      Sets the current record's "id" value
 * @method Appointment setStart()   Sets the current record's "start" value
 * @method Appointment setEnd()     Sets the current record's "end" value
 * @method Appointment setTitle()   Sets the current record's "title" value
 * @method Appointment setInfo()    Sets the current record's "info" value
 * @method Appointment setDogId()   Sets the current record's "dog_id" value
 * @method Appointment setUserId()  Sets the current record's "user_id" value
 * @method Appointment setDog()     Sets the current record's "Dog" value
 * @method Appointment setUser()    Sets the current record's "User" value
 * 
 * @package    petgroom
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseAppointment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('appointment');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('start', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('end', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('info', 'string', 2500, array(
             'type' => 'string',
             'length' => '2500',
             ));
        $this->hasColumn('dog_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Dog', array(
             'local' => 'dog_id',
             'foreign' => 'id'));

        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));
    }
}
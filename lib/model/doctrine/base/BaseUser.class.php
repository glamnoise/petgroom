<?php

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $second_name
 * @property string $email
 * @property timestamp $birthday
 * @property enum $gender
 * @property string $address
 * @property string $city
 * @property string $cap
 * @property string $phone
 * @property string $cell
 * @property string $info
 * @property Doctrine_Collection $Dog
 * @property Doctrine_Collection $Appointment
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getName()        Returns the current record's "name" value
 * @method string              getSecondName()  Returns the current record's "second_name" value
 * @method string              getEmail()       Returns the current record's "email" value
 * @method timestamp           getBirthday()    Returns the current record's "birthday" value
 * @method enum                getGender()      Returns the current record's "gender" value
 * @method string              getAddress()     Returns the current record's "address" value
 * @method string              getCity()        Returns the current record's "city" value
 * @method string              getCap()         Returns the current record's "cap" value
 * @method string              getPhone()       Returns the current record's "phone" value
 * @method string              getCell()        Returns the current record's "cell" value
 * @method string              getInfo()        Returns the current record's "info" value
 * @method Doctrine_Collection getDog()         Returns the current record's "Dog" collection
 * @method Doctrine_Collection getAppointment() Returns the current record's "Appointment" collection
 * @method User                setId()          Sets the current record's "id" value
 * @method User                setName()        Sets the current record's "name" value
 * @method User                setSecondName()  Sets the current record's "second_name" value
 * @method User                setEmail()       Sets the current record's "email" value
 * @method User                setBirthday()    Sets the current record's "birthday" value
 * @method User                setGender()      Sets the current record's "gender" value
 * @method User                setAddress()     Sets the current record's "address" value
 * @method User                setCity()        Sets the current record's "city" value
 * @method User                setCap()         Sets the current record's "cap" value
 * @method User                setPhone()       Sets the current record's "phone" value
 * @method User                setCell()        Sets the current record's "cell" value
 * @method User                setInfo()        Sets the current record's "info" value
 * @method User                setDog()         Sets the current record's "Dog" collection
 * @method User                setAppointment() Sets the current record's "Appointment" collection
 * 
 * @package    petgroom
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('second_name', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('birthday', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('gender', 'enum', 6, array(
             'type' => 'enum',
             'length' => 6,
             'values' => 
             array(
              0 => 'Male',
              1 => 'Female',
             ),
             ));
        $this->hasColumn('address', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('city', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('cap', 'string', 10, array(
             'type' => 'string',
             'length' => '10',
             ));
        $this->hasColumn('phone', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('cell', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('info', 'string', 2500, array(
             'type' => 'string',
             'length' => '2500',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Dog', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Appointment', array(
             'local' => 'id',
             'foreign' => 'user_id'));
    }
}